@inherits LayoutComponentBase
@implements IAsyncDisposable
@inject IJSRuntime jsRuntime
@inject IAccessTokenProvider TokenProvider
<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <div class="main">
        <div class="top-row px-4 auth">
            <LoginDisplay />
            <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
        </div>

        <div class="content px-4">
            @Body
        </div>
    </div>
</div>

@code {
    private HubConnection hubConnection;
    AccessToken accessToken = new AccessToken();
    protected override async Task OnInitializedAsync()
    {
        var token = await TokenProvider.RequestAccessToken();
        token.TryGetToken(out accessToken);
        if (accessToken is not null)
        {
            hubConnection = new HubConnectionBuilder()
     .WithUrl("https://localhost:44394/notificationHub", opt =>
     {
         opt.AccessTokenProvider = () => Task.FromResult(accessToken.Value);
     })
        .Build();

            hubConnection.On<string, string>("Notification", async (user, message) =>
            {
                var encodedMsg = $"{message}, {user}";
                await jsRuntime.InvokeAsync<string>("console.log", encodedMsg);
                StateHasChanged();
            });

            await hubConnection.StartAsync();
        }
    }

    public bool IsConnected =>
       hubConnection.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        await hubConnection.DisposeAsync();
    }
}